module adder_32bit(A,B,S,C32);
     input [32:1] A;
     input [32:1] B;
     output [32:1] S;
     output C32;

     wire [16:1] C;
     wire [16:1] G;
     wire [16:1] P;
     wire [16:1] S;

     CLA cla1(A[16:1],B[16:1],1'b0,S[16:1],P[16:1],G[16:1]);
     CLA cla2(A[32:16],B[32:16],C[1],S[32:16],P[2],G[2]);
     CLA cla3(A[32:16],B[32:16],C[2],S[32:16],P[3],G[3]);
     CLA cla4(A[32:16],B[32:16],C[3],S[32:16],P[4],G[4]);
     CLA cla5(A[32:16],B[32:16],C[4],S[32:16],P[5],G[5]);
     CLA cla6(A[32:16],B[32:16],C[5],S[32:16],P[6],G[6]);
     CLA cla7(A[32:16],B[32:16],C[6],S[32:16],P[7],G[7]);
     CLA cla8(A[32:16],B[32:16],C[7],S[32:16],P[8],G[8]);
     CLA cla9(A[32:16],B[32:16],C[8],S[32:16],P[9],G[9]);
     CLA cla10(A[32:16],B[32:16],C[9],S[32:16],P[10],G[10]);
     CLA cla11(A[32:16],B[32:16],C[10],S[32:16],P[11],G[11]);
     CLA cla12(A[32:16],B[32:16],C[11],S[32:16],P[12],G[12]);
     CLA cla13(A[32:16],B[32:16],C[12],S[32:16],P[13],G[13]);
     CLA cla14(A[32:16],B[32:16],C[13],S[32:16],P[14],G[14]);
     CLA cla15(A[32:16],B[32:16],C[14],S[32:16],P[15],G[15]);
     CLA cla16(A[32:16],B[32:16],C[15],S[32:16],P[16],G[16]);

     assign C32 = C[16];

endmodule